# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: storage delight - linux build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code with submodules
      uses: actions/checkout@v4
      with:
        submodules: true  # 确保子模块被检出

    - name: Cache vcpkg
      uses: actions/cache@v3
      with:
        path: |
          vcpkg_installed
          vcpkg/downloads
        key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}
        restore-keys: |
          ${{ runner.os }}-vcpkg-
      
    - name: Install Ninja
      run: sudo apt-get install -y ninja-build
        
    - name: Configure CMake with Presets
      run: cmake --preset default-linux-release

    - name: Build
      run: cmake --build --preset default-linux-release

    - name: Test
      working-directory: build/linux-release
      run: ctest --preset default-linux-release

